server:
  port: 10002
  address: 192.168.1.100
spring:
  application:
    name: client-content-manage
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/content-manage?user=wadexi&amp;password=wadexi&amp;useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true
    username: wadexi
    password: wadexi
  mvc:
    static-path-pattern: /**
  resources:
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path}
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB
web:
    upload-path: D:/

security:
  oauth2:
    client:
      client-id: sharecesuo # 当前客户端id
      client-secret: 123456 # 客户端的密码
      user-authorization-uri: http://192.168.1.100:5555/sso-server/oauth/authorize #请求认证的地址，获取授权码地址
      access-token-uri: http://192.168.1.100:5555/sso-server/oauth/token #令牌断点
      use-current-uri: false
      registered-redirect-uri: http://192.168.1.100:10002/login
    resource:
      jwt:
        # 当用户授权之后会响应一个授权码，重定向到当前应用的 http://localhost:9001/login?code=xxx
        # 自动的会对 /login 去获取令牌，获取到令牌后会通过 key-uri 获取到的公钥进行解密然后本地身份认证和授权（Session）
        key-uri: http://192.168.1.100:5555/sso-server/oauth/token_key # 获取公钥







#eureka:
#  client:
#    service-url:
#      defaultZone: http://192.168.1.100:1111/eureka/
#  instance:
#    lease-renewal-interval-in-seconds: 10  #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
#    lease-expiration-duration-in-seconds: 5  #服务刷新时间配置，每隔这个时间会主动心跳一次
#    prefer-ip-address: true
#    ip-address: 192.168.1.100
#    instance-id: ${eureka.instance.ip-address}:${server.port}
#management:
#  endpoints:
#    web:
#      exposure:
#        include: 'refresh'
#logging:
#  level:
#    org.springframework.security: debug

#sso:
#  client-id: sharecesuo
#  client-secret: 123456
#  redirect-uri: http://192.168.1.100:80/login
#  access-token-uri: http://192.168.1.100:8000/oauth/token
#  user-info-uri: http://192.168.1.100:8002/userInfo


#security:
#    oauth2:
#        client:
#            client-id: sharecesuo
#            client-secret: 123456
#            user-authorization-uri: http://192.168.1.100:8000/oauth/authorize #授权码端点
#            access-token-uri: http://192.168.1.100:8000/oauth/token #令牌断点
#            use-current-uri: false
#            registered-redirect-uri: http://192.168.1.100:10001/login
##            pre-established-redirect-uri: http://192.168.1.100:10001/login
##            token-name: access_token
##            authentication-scheme: query
##            client-authentication-scheme: form
#        resource:
##            token-info-uri: http://192.168.1.100/oauth/check_token
#            jwt:
#                key-uri: http://192.168.1.100:8000/oauth/token_key
#            user-info-uri: